{"version":3,"sources":["components/AddCategory.jsx","helpers/GetGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GiftExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA8BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATS,SAAAC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,8BCLlBG,EAAO,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGXG,EAHW,gBAIEA,EAAKC,OAJP,uBAIVC,EAJU,EAIVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,UAAUZ,QAVjB,kBAcVM,GAdU,4CAAD,sDCWLO,EATK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC3B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCcDO,EAlBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACd,ECCwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGrB,CAACpB,IACGqB,EDfqBK,CAAa1B,GAA7Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QACnB,OACI,qCACA,6BAAKpB,IACHoB,GAAW,mBAAGJ,UAAU,wCAAb,yBACd,qBAAKA,UAAU,YAAf,SAESH,EAAOJ,KAAI,SAACC,GAAD,OACP,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,eEiBpCiB,EAvBO,WAClB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIK4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCZlC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d801486a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit=e=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n","export const getGifs=async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mzmGzJkSY3gD59gihnKOVYzcEMHSpBIs`;\r\n    \r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from './GifGridItem'\r\nconst GifGrid = ({category}) => {\r\n    const {data:images,loading}=useFetchGifs(category);\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p className=\"card animate__animated animate__flash\">Cargando...</p> }\r\n       <div className=\"card-grid\">\r\n            {\r\n                images.map((img)=>(\r\n                    <GifGridItem {...img} key={img.id} />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category]);\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n           <h1>GiftExpertApp</h1> \r\n           <AddCategory setCategories={setCategories} />\r\n           <hr/>\r\n           \r\n\r\n            {\r\n                categories.map(category=>(\r\n                    <GifGrid key={category} category={category} />\r\n                ))\r\n            }\r\n\r\n           \r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default GiftExpertApp;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GiftExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}